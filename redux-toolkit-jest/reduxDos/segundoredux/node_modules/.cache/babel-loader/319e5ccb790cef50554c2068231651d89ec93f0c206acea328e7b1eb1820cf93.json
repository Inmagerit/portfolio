{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { v4 } from 'uuid';\nconst initialState = [{\n  id: v4(),\n  title: 'Task One',\n  description: 'Task One description',\n  completed: false\n}, {\n  id: v4(),\n  title: 'Task Two',\n  description: 'Task Two description',\n  completed: false\n}];\nexport const taskSlice = createSlice({\n  name: 'task',\n  initialState: initialState,\n  reducers: {\n    addTask: (state, action) => {\n      state.push(action.payload);\n    },\n    deleteTask: (state, action) => {\n      const taskFound = state.find(task => task.id === action.payload);\n      // console.log(taskFound)\n      if (taskFound) {\n        state.splice(state.indexOf(taskFound), 1);\n      }\n    }\n  }\n});\nexport const {\n  addTask,\n  deleteTask\n} = taskSlice.actions;","map":{"version":3,"names":["createSlice","v4","initialState","id","title","description","completed","taskSlice","name","reducers","addTask","state","action","push","payload","deleteTask","taskFound","find","task","splice","indexOf","actions"],"sources":["C:/Users/Oscar/Desktop/portFolio react-redux-zustand/redux-toolkit/reduxDos/segundoredux/src/features/taskList/taskSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {v4} from 'uuid';\r\n\r\nconst initialState = [\r\n    {\r\n        id:v4(),\r\n        title:'Task One',\r\n        description:'Task One description',\r\n        completed: false\r\n    },\r\n    {\r\n        id:v4(),\r\n        title:'Task Two',\r\n        description:'Task Two description',\r\n        completed: false}\r\n]\r\nexport const taskSlice = createSlice({\r\n\r\n    name:'task',\r\n    initialState:initialState,\r\n    reducers:{\r\n        addTask: (state,action) =>{\r\n            state.push(action.payload)\r\n        },\r\n        deleteTask: (state,action) =>{\r\n           const taskFound = state.find(task => task.id === action.payload)\r\n          // console.log(taskFound)\r\n           if(taskFound){\r\n            state.splice(state.indexOf(taskFound),1)\r\n           }\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const {addTask,deleteTask} = taskSlice.actions"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,EAAE,QAAO,MAAM;AAEvB,MAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAACF,EAAE,CAAC,CAAC;EACPG,KAAK,EAAC,UAAU;EAChBC,WAAW,EAAC,sBAAsB;EAClCC,SAAS,EAAE;AACf,CAAC,EACD;EACIH,EAAE,EAACF,EAAE,CAAC,CAAC;EACPG,KAAK,EAAC,UAAU;EAChBC,WAAW,EAAC,sBAAsB;EAClCC,SAAS,EAAE;AAAK,CAAC,CACxB;AACD,OAAO,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAEjCQ,IAAI,EAAC,MAAM;EACXN,YAAY,EAACA,YAAY;EACzBO,QAAQ,EAAC;IACLC,OAAO,EAAEA,CAACC,KAAK,EAACC,MAAM,KAAI;MACtBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC9B,CAAC;IACDC,UAAU,EAAEA,CAACJ,KAAK,EAACC,MAAM,KAAI;MAC1B,MAAMI,SAAS,GAAGL,KAAK,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACf,EAAE,KAAKS,MAAM,CAACE,OAAO,CAAC;MACjE;MACC,IAAGE,SAAS,EAAC;QACZL,KAAK,CAACQ,MAAM,CAACR,KAAK,CAACS,OAAO,CAACJ,SAAS,CAAC,EAAC,CAAC,CAAC;MACzC;IACH;EACJ;AAEJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACN,OAAO;EAACK;AAAU,CAAC,GAAGR,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}