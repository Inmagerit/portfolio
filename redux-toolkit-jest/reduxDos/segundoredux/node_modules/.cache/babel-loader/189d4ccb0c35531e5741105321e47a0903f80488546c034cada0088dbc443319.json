{"ast":null,"code":"import{useState,useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{addTask}from\"../features/taskList/taskSlice\";import{v4}from'uuid';import{useNavigate,useParams}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TaskForm(){const dispatch=useDispatch();const navigate=useNavigate();const params=useParams();const tasks=useSelector(state=>state.tasks);const[task,setTask]=useState({title:'',description:''});useEffect(()=>{console.log(params.id);if(params.id){const foundTask=tasks.find(task=>task.id===params.id);if(foundTask){setTask(foundTask);}else{console.log('Task not found');}}},[params.id,tasks]);const handleChange=e=>{setTask({...task,[e.target.name]:e.target.value});};const handleSubmit=e=>{e.preventDefault();//console.log(task)\ndispatch(addTask({id:v4(),...task}));navigate('/');};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task Form\"}),/*#__PURE__*/_jsx(\"input\",{name:\"title\",type:\"text\",placeholder:\"title for task\",onChange:handleChange,value:tasks.title}),/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",placeholder:\"task description\",onChange:handleChange,value:tasks.description}),/*#__PURE__*/_jsx(\"button\",{children:\"save\"})]});}export default TaskForm;","map":{"version":3,"names":["useState","useEffect","useDispatch","useSelector","addTask","v4","useNavigate","useParams","jsx","_jsx","jsxs","_jsxs","TaskForm","dispatch","navigate","params","tasks","state","task","setTask","title","description","console","log","id","foundTask","find","handleChange","e","target","name","value","handleSubmit","preventDefault","onSubmit","children","type","placeholder","onChange"],"sources":["C:/Users/Oscar/Desktop/portFolio react-redux-zustand/redux-toolkit/reduxDos/segundoredux/src/components/TaskForm.js"],"sourcesContent":["import { useState,useEffect } from \"react\"\r\nimport { useDispatch,useSelector, } from \"react-redux\"\r\nimport { addTask } from \"../features/taskList/taskSlice\"\r\nimport {v4} from 'uuid'\r\nimport { useNavigate,useParams } from \"react-router-dom\"\r\n\r\n\r\nfunction TaskForm() {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const params = useParams()\r\n    const tasks = useSelector(state => state.tasks)\r\n\r\n    const [task,setTask] = useState(\r\n        {\r\n            title:'',\r\n            description:''\r\n\r\n        }\r\n    )\r\n    useEffect(() => {\r\n        console.log(params.id);\r\n    \r\n        if (params.id) {\r\n            const foundTask = tasks.find(task => task.id === params.id);\r\n            if (foundTask) {\r\n                setTask(foundTask);\r\n            } else {\r\n                console.log('Task not found');\r\n            }\r\n        }\r\n    }, [params.id, tasks]);\r\n\r\n    \r\n    const handleChange = (e) =>{\r\n\r\n            setTask({\r\n                ...task,\r\n                [e.target.name] : e.target.value,\r\n                \r\n            })\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        //console.log(task)\r\n        dispatch(addTask({\r\n            id: v4(),\r\n            ...task,\r\n            \r\n        }))\r\n        navigate('/')\r\n    }\r\n\r\n    \r\n    return(\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n        <h1>Task Form</h1>\r\n        <input name=\"title\" type=\"text\" placeholder=\"title for task\" onChange={handleChange} value={tasks.title}></input>\r\n        <textarea name=\"description\" placeholder=\"task description\" onChange={handleChange} value={tasks.description}></textarea>\r\n        <button>save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TaskForm"],"mappings":"AAAA,OAASA,QAAQ,CAACC,SAAS,KAAQ,OAAO,CAC1C,OAASC,WAAW,CAACC,WAAW,KAAS,aAAa,CACtD,OAASC,OAAO,KAAQ,gCAAgC,CACxD,OAAQC,EAAE,KAAO,MAAM,CACvB,OAASC,WAAW,CAACC,SAAS,KAAQ,kBAAkB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGxD,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAEhB,KAAM,CAAAC,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAY,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAS,MAAM,CAAGR,SAAS,CAAC,CAAC,CAC1B,KAAM,CAAAS,KAAK,CAAGb,WAAW,CAACc,KAAK,EAAIA,KAAK,CAACD,KAAK,CAAC,CAE/C,KAAM,CAACE,IAAI,CAACC,OAAO,CAAC,CAAGnB,QAAQ,CAC3B,CACIoB,KAAK,CAAC,EAAE,CACRC,WAAW,CAAC,EAEhB,CACJ,CAAC,CACDpB,SAAS,CAAC,IAAM,CACZqB,OAAO,CAACC,GAAG,CAACR,MAAM,CAACS,EAAE,CAAC,CAEtB,GAAIT,MAAM,CAACS,EAAE,CAAE,CACX,KAAM,CAAAC,SAAS,CAAGT,KAAK,CAACU,IAAI,CAACR,IAAI,EAAIA,IAAI,CAACM,EAAE,GAAKT,MAAM,CAACS,EAAE,CAAC,CAC3D,GAAIC,SAAS,CAAE,CACXN,OAAO,CAACM,SAAS,CAAC,CACtB,CAAC,IAAM,CACHH,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CACjC,CACJ,CACJ,CAAC,CAAE,CAACR,MAAM,CAACS,EAAE,CAAER,KAAK,CAAC,CAAC,CAGtB,KAAM,CAAAW,YAAY,CAAIC,CAAC,EAAI,CAEnBT,OAAO,CAAC,CACJ,GAAGD,IAAI,CACP,CAACU,CAAC,CAACC,MAAM,CAACC,IAAI,EAAIF,CAAC,CAACC,MAAM,CAACE,KAE/B,CAAC,CAAC,CACV,CAAC,CAED,KAAM,CAAAC,YAAY,CAAIJ,CAAC,EAAI,CACvBA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB;AACApB,QAAQ,CAACT,OAAO,CAAC,CACboB,EAAE,CAAEnB,EAAE,CAAC,CAAC,CACR,GAAGa,IAEP,CAAC,CAAC,CAAC,CACHJ,QAAQ,CAAC,GAAG,CAAC,CACjB,CAAC,CAGD,mBAEIH,KAAA,SAAMuB,QAAQ,CAAEF,YAAa,CAAAG,QAAA,eAC7B1B,IAAA,OAAA0B,QAAA,CAAI,WAAS,CAAI,CAAC,cAClB1B,IAAA,UAAOqB,IAAI,CAAC,OAAO,CAACM,IAAI,CAAC,MAAM,CAACC,WAAW,CAAC,gBAAgB,CAACC,QAAQ,CAAEX,YAAa,CAACI,KAAK,CAAEf,KAAK,CAACI,KAAM,CAAQ,CAAC,cACjHX,IAAA,aAAUqB,IAAI,CAAC,aAAa,CAACO,WAAW,CAAC,kBAAkB,CAACC,QAAQ,CAAEX,YAAa,CAACI,KAAK,CAAEf,KAAK,CAACK,WAAY,CAAW,CAAC,cACzHZ,IAAA,WAAA0B,QAAA,CAAQ,MAAI,CAAQ,CAAC,EACf,CAAC,CAEf,CAEA,cAAe,CAAAvB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}